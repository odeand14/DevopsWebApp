---
# Playbook
- name: Create VM for app
  hosts: localhost
  vars:
    service_account_email: "devops@devopsexamproject.iam.gserviceaccount.com"
    credentials_file: "../DevopsExamProject-02241d8a5fa8.json"
    project_id: "devopsexamproject"
  tasks:

    - name: Hello, world
      shell: echo "Hello, world"

    - name: create virtual machine
      gce:
        instance_names: devops1
        zone: europe-west1-d
        machine_type: n1-standard-1
        image: debian-8
        state: present
        service_account_email: "{{ service_account_email }}"
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        metadata : '{ "startup-script" : "apt-get update" }'
        tags:
          - http-server
          - webserver
        ip_forward: true
        service_account_permissions:
          - storage-full
          - taskqueue
          - bigquery
          - compute-rw
      register: gce

    - name: Save host data
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: gce_instance_ip
      with_items: "{{ gce.instance_data }}"

    - name: Wait for SSH for instance
      wait_for:
        delay: 1
        host: "{{ item.public_ip }}"
        port: 22
        state: started
        timeout: 30
      with_items: "{{ gce.instance_data }}"

# NOT WORKING :(
#- name: Install docker on new image
#  hosts: gce_instance_ip
#  connection: ssh
#  become: true
#  tasks:
#    - name: ensure repository key is installed
#      apt_key:
#        id: "58118E89F3A912897C070ADBF76221572C52609D"
#        keyserver: "hkp://p80.pool.sks-keyservers.net:80"
#        state: present
#
#    - name: ensure docker registry is available
#      apt_repository: repo='deb https://apt.dockerproject.org/repo debian-jessie main' state=present
#
#    - name: ensure docker and dependencies are installed
#      apt: name=docker-engine update_cache=yes
#
#    - service: name=docker state=restarted
#
#- name: Download and start container
#  hosts: gce_instance_ip
#  connection: ssh
#  become: true
#  tasks:
#    - name: ensure a container is running
#      docker_container:
#        name: odeand14/devopsexam
#        state: started
#        image: "odeand14/devopsexam:latest"
#        pull: true
#        ports:
#          - "80:80"
